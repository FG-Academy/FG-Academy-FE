# Dockerfile
FROM node:20.4.0-alpine3.18
# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the entire project to the working directory
COPY . .

ARG NEXT_PUBLIC_IMAGE_URL
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_BASE_HOST
ARG AUTH_TRUST_HOST
ARG AUTH_SECRET
ARG NEXT_PUBLIC_DOCKER_HOST

# COPY .env ./.env.production
# COPY public ./public
# COPY next.config.mjs .
# COPY tsconfig.json .
# Build the Next.js application for production
RUN npm run build
# Set the environment variable to run the Next.js application in production mode
ENV NODE_ENV production
# ENV PORT 3000

# COPY --from=builder /usr/src/app/public ./public
# COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/static ./.next/static

# Expose the port that the application will run on
EXPOSE 3000

ENV NEXT_PUBLIC_IMAGE_URL=${NEXT_PUBLIC_IMAGE_URL}
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_BASE_HOST=${NEXT_PUBLIC_BAES_HOST}
ENV AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
ENV AUTH_SECRET=${AUTH_SECRET}
ENV NEXT_PUBLIC_DOCKER_HOST=${NEXT_PUBLIC_DOCKER_HOST}

# Start the application
CMD ["npm", "start"]